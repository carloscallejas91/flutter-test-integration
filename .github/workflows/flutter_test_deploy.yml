name: Flutter CI/CD - Test Lab & App Distribution

on:
  push:
    branches: [ main ]

jobs:
  build_test_and_distribute:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Clonar o repositório
        uses: actions/checkout@v4

      - name: 2. Configurar o Java (JDK)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 3. Configurar o Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.2'
          channel: 'stable'
          cache: true

      - name: 4. Instalar dependências
        run: flutter pub get

      - name: 4a. Criar o ficheiro google-services.json a partir do Secret
        run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > android/app/google-services.json

      - name: 5. Construir e Mover APKs
        run: |
          # Limpa e constrói o APK da app.
          flutter clean
          flutter build apk --debug
          
          # Entra na pasta android, dá permissão e constrói o APK de teste.
          cd android
          chmod +x ./gradlew
          ./gradlew app:assembleAndroidTest
          cd ..

          # Cria um diretório para os artefactos.
          mkdir -p artifacts
          
          # Move o APK da aplicação.
          mv build/app/outputs/flutter-apk/app-debug.apk artifacts/app-debug.apk
          
          # Encontra o APK de teste, onde quer que ele esteja, e move-o.
          find android/app/build/outputs -name "app-debug-androidTest.apk" -exec mv {} artifacts/app-debug-androidTest.apk \;

      - name: 6. Autenticar com o Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: 7. Configurar projeto gcloud
        run: gcloud config set project test-integration-app-4e52e

      - name: 8. Executar testes no Firebase Test Lab
        run: |
          gcloud firebase test android run \
            --type instrumentation \
            --app artifacts/app-debug.apk \
            --test artifacts/app-debug-androidTest.apk \
            --device model=akita,version=34 \
            --timeout 5m

      - name: 8a. Instalar Firebase CLI Tools
        run: npm install -g firebase-tools

      - name: 9. Distribuir para QA via Firebase App Distribution
        if: success()
        run: |
          firebase appdistribution:distribute artifacts/app-debug.apk \
            --app "1:424599350937:android:5c7fd412fffd453bcb5208" \
            --release-notes "Build do CI" \
            --groups "qa-team" \
            --token ${{ secrets.FIREBASE_TOKEN }}

