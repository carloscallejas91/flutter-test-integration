# Nome do Workflow que aparecerá na aba "Actions" do GitHub
name: Flutter CI/CD - Test Lab & App Distribution

# Define o gatilho para a execução do workflow.
on:
  push:
    branches:
      - main

jobs:
  build_test_and_distribute:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Clona o código do seu repositório para a máquina virtual
      - name: 1. Clonar o repositório
        uses: actions/checkout@v4

      # Passo 2: Configura o ambiente Java (necessário para a compilação Android)
      - name: 2. Configurar o Java (JDK)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Passo 3: Configura o ambiente Flutter na versão exata do seu projeto
      - name: 3. Configurar o Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.2'
          channel: 'stable'
          cache: true

      # Passo 4: Instalar dependências do Flutter
      - name: 4. Instalar dependências do Flutter
        run: flutter pub get

      # Passo 5: Construir APK da Aplicação e de Teste
      - name: 5. Construir APK da Aplicação e de Teste
        run: |
          flutter build apk --debug
          cd android
          ./gradlew app:assembleAndroidTest
          cd ..

      # Passo 6: Autenticar com o Google Cloud
      - name: 6. Autenticar com o Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # Passo 7: Configurar projeto gcloud
      - name: 7. Configurar projeto gcloud
        run: gcloud config set project 'test-integration-app-4e52e'

      # Passo 8: Executar testes no Firebase Test Lab
      - name: 8. Executar testes no Firebase Test Lab
        id: run_test_lab
        run: |
          gcloud firebase test android run \
            --type instrumentation \
            --app build/app/outputs/apk/debug/app-debug.apk \
            --test build/app/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
            --device model=akita,version=34,locale=pt_BR,orientation=portrait \
            --timeout 5m

      # Passo 8a: Instalar as ferramentas da CLI do Firebase
      - name: 8a. Instalar Firebase CLI Tools
        run: npm install -g firebase-tools

      # Passo 9: Distribuir para QA via Firebase App Distribution com a CLI
      - name: 9. Distribuir para QA via Firebase App Distribution
        if: success()
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          firebase appdistribution:distribute build/app/outputs/apk/debug/app-debug.apk \
            --app "1:424599350937:android:5c7fd412fffd453bcb5208" \
            --release-notes "Build ${{ github.run_number }} | Testes integrados aprovados no Test Lab. Pronto para QA." \
            --groups "qa-team"

